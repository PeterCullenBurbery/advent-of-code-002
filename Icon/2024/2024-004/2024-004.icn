procedure main()
    # Define the file path
    file_path := "input.txt"
    
    # Define the target word
    target_word := "XMAS"
    target_len := *target_word
    
    # Read the file into a grid
    grid := read_lines(file_path)
    rows := *grid
    cols := *grid[1]

    # Define directions for word search
    directions := [
        [0, 1],    # Right
        [1, 0],    # Down
        [1, 1],    # Diagonal-right-down
        [1, -1],   # Diagonal-left-down
        [0, -1],   # Left
        [-1, 0],   # Up
        [-1, -1],  # Diagonal-left-up
        [-1, 1]    # Diagonal-right-up
    ]

    # Count occurrences of the word
    count := 0
    every r := 1 to rows do {
        every c := 1 to cols do {
			every dir := !directions do {
				dx := dir[1]
				dy := dir[2]
				if check_word(grid, r, c, dx, dy, target_word) then count +:= 1
			}

        }
    }
    write("Count of XMAS occurrences: ", count)

    # Count X-MAS patterns
    xmas_patterns := count_xmas_patterns(grid)
    write("Total X-MAS patterns: ", xmas_patterns)
end

procedure read_lines(file_path)
    lines := []
    input := open(file_path)
    while line := read(input) do {
        put(lines, line)
    }
    close(input)
    return lines
end

procedure check_word(grid, x, y, dx, dy, word)
    target_len := *word
    every i := 0 to target_len - 1 do {
        nx := x + i * dx
        ny := y + i * dy
        if nx < 1 | ny < 1 | nx > *grid | ny > *grid[1] then fail
        if grid[nx][ny] ~== word[i + 1] then fail
    }
    return &null
end


procedure count_xmas_patterns(grid)
    rows := *grid
    cols := *grid[1]
    count := 0

    every r := 2 to rows - 1 do {
        every c := 2 to cols - 1 do {
            center := grid[r][c]
            top_left := grid[r - 1][c - 1]
            top_right := grid[r - 1][c + 1]
            bottom_left := grid[r + 1][c - 1]
            bottom_right := grid[r + 1][c + 1]

            if center == "A" then {
                # Check for all valid X-MAS configurations
                if top_left == "M" & top_right == "S" & bottom_left == "M" & bottom_right == "S" then count +:= 1
                if top_left == "S" & top_right == "M" & bottom_left == "S" & bottom_right == "M" then count +:= 1
                if top_left == "M" & top_right == "M" & bottom_left == "S" & bottom_right == "S" then count +:= 1
                if top_left == "S" & top_right == "S" & bottom_left == "M" & bottom_right == "M" then count +:= 1
            }
        }
    }

    return count
end
